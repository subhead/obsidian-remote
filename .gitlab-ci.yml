image: docker:latest

services:
  - docker:latest-dind

variables:
  IMAGE_BASE: $CI_REGISTRY_IMAGE
  IMAGE_TAG_COMMIT: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  IMAGE_TAG_BRANCH: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  IMAGE_TAG_LATEST: $CI_REGISTRY_IMAGE:latest

stages:
  - prepare
  - build
  - push

extract_version:
  stage: prepare
  script:
    - export OBSIDIAN_VERSION=$(grep -E '^ARG OBSIDIAN_VERSION=' Dockerfile | cut -d= -f2)
    - echo "üì¶ Version extracted $OBSIDIAN_VERSION"
    - echo $OBSIDIAN_VERSION > .obsidian-version
  artifacts:
    paths:
      - .obsidian-version

before_script:
  - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin "$CI_REGISTRY"

build_image:
  stage: build
  dependencies:
    - extract_version
  script:
    - export OBSIDIAN_VERSION=$(cat .obsidian-version)
    - docker build --build-arg OBSIDIAN_VERSION=$OBSIDIAN_VERSION -t $CI_REGISTRY_IMAGE:$OBSIDIAN_VERSION .
    - docker tag $CI_REGISTRY_IMAGE:$OBSIDIAN_VERSION $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$OBSIDIAN_VERSION $CI_REGISTRY_IMAGE:latest
    - echo "üõ†Ô∏è  Build completed for Obsidian version $OBSIDIAN_VERSION"
  artifacts:
    paths:
      - .obsidian-version

push_image:
  stage: push
  dependencies:
    - build_image
    - extract_version
  script:
    - export OBSIDIAN_VERSION=$(cat .obsidian-version)
    - docker push $CI_REGISTRY_IMAGE:$OBSIDIAN_VERSION
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
    - echo "üì§ All tags pushed for Obsidian $OBSIDIAN_VERSION"
